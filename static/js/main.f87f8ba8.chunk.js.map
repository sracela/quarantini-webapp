{"version":3,"sources":["components/Card.js","components/GameContext.js","components/CardStack.js","screens/Game.js","screens/Howto.js","components/Nav.js","screens/About.js","components/App.js","serviceWorker.js","index.js","images/covid1.jpg","styles/card.module.css","images/1howto.jpg","images/2howto.jpg","images/3howto.jpg","images/quarantini_logo.jpg","images/sara.jpeg","images/vic.jpeg"],"names":["Card","description","image_url","className","style","card","imageDiv","src","alt","textDiv","GameContext","createContext","GameProvider","props","useState","cards","setCards","show","setShow","isLast","setIsLast","Provider","value","children","CardStack","useContext","Tinder","setTinder","images","map","key","last_image","exact","textDecoration","activeClassName","to","onClick","type","size","thickness","color","colors","width","height","direction","duration","ref","node","i","arr","id","swipe","state","current","length","Game","Howto","iihowto","ihowto","iiihowto","Nav","logo","About","vic","sara","Home","App","useEffect","a","fetch","catch","err","console","error","response","json","data","fetchData","log","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f87f8ba8.chunk.js","sourcesContent":["import React from 'react';\nimport style from 'styles/card.module.css';\n\n\nconst Card = ({description, image_url}) => {\n\n        return(\n            <div className={style.card}>\n                <div className={style.imageDiv}>\n                    <img src={image_url} alt=\"\"/>\n                </div>\n                <div className={style.textDiv}>\n                    <p>{description}</p>\n                </div>\n            </div>\n        );\n\n}\n\nexport default Card;","import React, { useState, createContext } from 'react';\n\nexport const GameContext = createContext();\n\nexport const GameProvider = props => {\n    const [cards, setCards] = useState([]);\n    const [show, setShow] = useState(false);\n    const [isLast, setIsLast] = useState(false);\n\n    return (\n    <GameContext.Provider value={[cards, setCards, show, setShow, isLast, setIsLast]}>\n    {props.children}\n    </GameContext.Provider>);\n}\n","import React, { useState, useContext } from 'react';\nimport Card from \"components/Card\";\nimport {\n  MorphIcon\n} from 'react-svg-buttons';\nimport { TinderLikeCard } from 'react-stack-cards';\nimport { GameContext } from 'components/GameContext';\nimport last_image from \"images/covid1.jpg\";\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst CardStack = () => {\n  const last_description = \"Suggest more cards sending an email to quarantinigame@gmail.com\";\n\n  const [cards, , , , isLast, setIsLast] = useContext(GameContext);\n  const [Tinder, setTinder] = useState(null);\n\n  const images = cards.map(card => \"#202020\");\n\n  function onTinderSwipe() {\n    setTinder(Tinder.swipe());\n    if(Tinder.state.current === cards.length){\n      setIsLast(true);\n    }\n\n  }\n\n  return(\n       !isLast ? \n        \n        <div className=\"game-wrapper-1\">\n         <TinderLikeCard\n          colors={images}\n          width=\"400\"\n          height=\"450\"\n          direction=\"swipeLeft\"\n          duration={150}\n          className=\"tinder\"\n          ref={(node) =>  setTinder(node)}>\n             {cards.map((card, i, arr) => <Card key={card.id} description={card.description} image_url={card.image_url} />\n             )}\n        </TinderLikeCard>\n        <div>\n        <button onClick={onTinderSwipe}>\n          <MorphIcon\n            type=\"check\"\n            size={75}\n            thickness={2}\n            color=\"#202020\" />\n        </button>\n        </div>\n        </div>\n         : \n        <div className=\"game-wrapper-2\">\n        <div className>\n        <Card key=\"last\" description={last_description} image_url={last_image} />\n        </div>\n        <NavLink exact style={{textDecoration: 'none'}} activeClassName=\"selected-main\" className=\"Link\" to='/quarantini-webapp'>\n          <button onClick={() => setIsLast(false)}>\n            <MorphIcon\n              type=\"thunderbolt\"\n              size={75}\n              thickness={2}\n              color=\"#202020\" />\n          </button>\n        </NavLink>\n        </div>\n  );\n\n}\nexport default CardStack;\n","import React, { useContext } from 'react';\nimport 'styles/App.css';\nimport CardStack from 'components/CardStack';\nimport { GameContext } from 'components/GameContext';\nimport Card from \"components/Card\";\nimport last_image from \"images/covid1.jpg\";\n\n\nfunction Game(){\n  const loading = \"Loading cards\";\n\n  const [, , show, , , ] = useContext(GameContext);\n  return(\n    <div className=\"container\">\n    <div className=\"header\">\n      <h1>Let's play Quarantini!</h1>\n    </div>\n    <div className=\"item2\">\n      <h2>Together we will get through this, so we might as well get drunk.</h2>\n    </div>\n    <div className=\"item\">\n    </div>\n    <div className=\"wrapper\">\n      {show ? <CardStack /> : \n            <Card key=\"loading\"\n          description={loading}\n          image_url={last_image}\n          />}\n    </div>\n    <div className=\"item\">\n    </div>\n  </div>\n  );\n}\n\nexport default Game;","import React from 'react';\nimport 'styles/App.css';\nimport Card from \"components/Card\";\nimport ihowto from \"images/1howto.jpg\";\nimport iihowto from \"images/2howto.jpg\";\nimport iiihowto from \"images/3howto.jpg\";\n\n\nfunction Howto() {\n  const howto1 = \"If you’re playing in person, take turns reading the cards or have one person read all.\";\n  const howto2 = \"If you’re playing online (recommended social distancing) screen share using Zoom / Facetime / Hangout or any video chatting app.\";\n  const howto3 = \"If you lose, you drink!.\";\n\n  return(\n    \n  <div className=\"container\">\n  <div className=\"header\">\n    <h1>How to play</h1>\n  </div>\n  <div className=\"item2\">\n    <h2>Together we will get through this, so we might as well get drunk.</h2>\n  </div>\n  <div className=\"item3\">\n        <Card key=\"loading\"\n          description={howto1}\n          image_url={iihowto}\n          />\n  </div>\n  <div className=\"item4\">\n  <Card key=\"loading\"\n          description={howto2}\n          image_url={ihowto}\n          />\n  </div>\n  <div className=\"item5\">\n        <Card key=\"loading\"\n          description={howto3}\n          image_url={iiihowto}\n          />\n  </div>\n</div>\n  );\n}\n\nexport default Howto;\n","import React from 'react';\nimport 'styles/Nav.css';\nimport logo from 'images/quarantini_logo.jpg';\nimport { NavLink } from 'react-router-dom';\n\n//when we Link to something we get access to something in our props like this:\n//function itemDetail({ match }) { useEffect(); } and then... match.params.id\nfunction Nav () {\n\n  return(\n    <nav className=\"Nav\">\n        <div className=\"Nav-logo\">\n            <NavLink className=\"App-logo\" to='/'>\n                <img src={logo} alt=\"logo\" />\n            </NavLink>\n        </div>\n        <div className=\"Nav-title\">\n            <h1>Quarantini</h1>\n        </div>\n        <div className=\"Nav-links\">\n            <ul className=\"nav-links\">\n                <NavLink exact activeClassName=\"selected\" className=\"Link\" to='/quarantini-webapp'>\n                    <li>Home</li>\n                </NavLink>\n                <NavLink activeClassName=\"selected\" className=\"Link\" to='/quarantini-webapp/howto'>\n                    <li>How to play</li>\n                </NavLink>\n                <NavLink activeClassName=\"selected\" className=\"Link\" to='/quarantini-webapp/about'>\n                    <li>About</li>\n                </NavLink>\n                <NavLink activeClassName=\"selected-main\" className=\"Link main\" to='/quarantini-webapp/game'>\n                    <li>Play!</li>\n                </NavLink>\n            </ul>\n        </div>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\nimport 'styles/App.css';\nimport sara from \"images/sara.jpeg\";\nimport vic from \"images/vic.jpeg\";\nimport Card from \"components/Card\";\n\n\nfunction About () {\n  const Victoria = \"Studies: \\nJob: \\nMail: \\nLinkedin: \\nSocial Media:\";\n  const Sara = \"Studies: Telecom Engineering, Master in Computer Vision\\nJob: Junior Sofware Engineer \\nMail: saracelalfonso@gmail.com \\nLinkedin: https://www.linkedin.com/in/sara-cela-alfonso-9a1001118/ \\nSocial Media: https://github.com/sracela - https://twitter.com/SaraCela\";\n\n  return(\n    \n  <div className=\"container\">\n  <div className=\"header\">\n    <h1>About</h1>\n  </div>\n  <div className=\"item2\">\n    <h2>This project was carried out with a lot of love by Sara and Victoria. If you want to know something more about each of them, we leave you here their contact info.</h2>\n  </div>\n  <div className=\"item3\">\n        <Card key=\"loading\"\n          description={Victoria}\n          image_url={vic}\n          />\n  </div>\n  <div className=\"item4\">\n  </div>\n  <div className=\"item5\">\n        <Card key=\"loading\"\n          description={Sara}\n          image_url={sara}\n          />\n  </div>\n</div>\n  );\n}\n\nexport default About;\n","import React, { useContext, useEffect } from 'react';\nimport Game from \"screens/Game\";\nimport Howto from \"screens/Howto\";\nimport Nav from \"components/Nav\";\nimport About from \"screens/About\";\nimport 'styles/App.css';\nimport { GameContext } from 'components/GameContext';\n\n// routing\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\n  const cardReq = \"https://sracela.pythonanywhere.com/cards/\";\n\n  const [cards, setCards, , setShow] = useContext(GameContext);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(cardReq).catch(err => console.error(err));\n      const data = await response.json().catch(err => console.error(err));\n      //setCards(data.slice(0, 5));\n      setCards(data);\n      setShow(true);\n    };\n\n    fetchData();\n    console.log(`loaded cards: ${cards}`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  return(\n    <Router>\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n        <Route path=\"/quarantini-webapp\" exact component={Home}/>\n        <Route path=\"/howto\" exact component={Howto}/>\n        <Route path=\"/about\" component= {About}/>\n        <Route path=\"/game\" component={Game}/>\n      </Switch>\n    </div>\n    </Router>\n\n  );\n}\n\nconst Home = () => (\n\n  <div className=\"container\">\n    <div className=\"header\">\n      <h1>Stay Safe While Having Fun</h1>\n    </div>\n    <div className=\"item2\">\n      <h2>Together we will get through this, so we might as well get drunk.</h2>\n    </div>\n    <div className=\"item3\">\n    </div>\n    <div className=\"item4\">\n    </div>\n    <div className=\"item5\">\n    </div>\n  </div>\n\n\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { GameProvider } from 'components/GameContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameProvider><App /></GameProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/covid1.d26653e3.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__3Qqba\",\"imageDiv\":\"card_imageDiv__IYlEc\",\"textDiv\":\"card_textDiv__19RzJ\"};","module.exports = __webpack_public_path__ + \"static/media/1howto.f33a2f8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2howto.5a12f096.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3howto.fd61da32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/quarantini_logo.18611904.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sara.6bb4245c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/vic.41a05dbd.jpeg\";"],"sourceRoot":""}